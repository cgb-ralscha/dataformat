// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var ch = ch || {};

/**
 * @const
 * @namespace
 */
ch.rasc = ch.rasc || {};

/**
 * @const
 * @namespace
 */
ch.rasc.dataformat = ch.rasc.dataformat || {};

/**
 * @const
 * @namespace
 */
ch.rasc.dataformat.fb = ch.rasc.dataformat.fb || {};

/**
 * @constructor
 */
ch.rasc.dataformat.fb.Address = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ch.rasc.dataformat.fb.Address}
 */
ch.rasc.dataformat.fb.Address.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ch.rasc.dataformat.fb.Address=} obj
 * @returns {ch.rasc.dataformat.fb.Address}
 */
ch.rasc.dataformat.fb.Address.getRootAsAddress = function(bb, obj) {
  return (obj || new ch.rasc.dataformat.fb.Address).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
ch.rasc.dataformat.fb.Address.prototype.id = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
ch.rasc.dataformat.fb.Address.prototype.lastName = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
ch.rasc.dataformat.fb.Address.prototype.firstName = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
ch.rasc.dataformat.fb.Address.prototype.street = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
ch.rasc.dataformat.fb.Address.prototype.zip = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
ch.rasc.dataformat.fb.Address.prototype.city = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
ch.rasc.dataformat.fb.Address.prototype.country = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
ch.rasc.dataformat.fb.Address.prototype.lat = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
ch.rasc.dataformat.fb.Address.prototype.lng = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
ch.rasc.dataformat.fb.Address.prototype.email = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
ch.rasc.dataformat.fb.Address.prototype.dob = function() {
  var offset = this.bb.__offset(this.bb_pos, 24);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ch.rasc.dataformat.fb.Address.startAddress = function(builder) {
  builder.startObject(11);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 */
ch.rasc.dataformat.fb.Address.addId = function(builder, id) {
  builder.addFieldInt32(0, id, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} lastNameOffset
 */
ch.rasc.dataformat.fb.Address.addLastName = function(builder, lastNameOffset) {
  builder.addFieldOffset(1, lastNameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} firstNameOffset
 */
ch.rasc.dataformat.fb.Address.addFirstName = function(builder, firstNameOffset) {
  builder.addFieldOffset(2, firstNameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} streetOffset
 */
ch.rasc.dataformat.fb.Address.addStreet = function(builder, streetOffset) {
  builder.addFieldOffset(3, streetOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} zipOffset
 */
ch.rasc.dataformat.fb.Address.addZip = function(builder, zipOffset) {
  builder.addFieldOffset(4, zipOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} cityOffset
 */
ch.rasc.dataformat.fb.Address.addCity = function(builder, cityOffset) {
  builder.addFieldOffset(5, cityOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} countryOffset
 */
ch.rasc.dataformat.fb.Address.addCountry = function(builder, countryOffset) {
  builder.addFieldOffset(6, countryOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} lat
 */
ch.rasc.dataformat.fb.Address.addLat = function(builder, lat) {
  builder.addFieldFloat32(7, lat, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} lng
 */
ch.rasc.dataformat.fb.Address.addLng = function(builder, lng) {
  builder.addFieldFloat32(8, lng, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} emailOffset
 */
ch.rasc.dataformat.fb.Address.addEmail = function(builder, emailOffset) {
  builder.addFieldOffset(9, emailOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} dob
 */
ch.rasc.dataformat.fb.Address.addDob = function(builder, dob) {
  builder.addFieldInt32(10, dob, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ch.rasc.dataformat.fb.Address.endAddress = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
ch.rasc.dataformat.fb.Addresses = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ch.rasc.dataformat.fb.Addresses}
 */
ch.rasc.dataformat.fb.Addresses.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ch.rasc.dataformat.fb.Addresses=} obj
 * @returns {ch.rasc.dataformat.fb.Addresses}
 */
ch.rasc.dataformat.fb.Addresses.getRootAsAddresses = function(bb, obj) {
  return (obj || new ch.rasc.dataformat.fb.Addresses).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {ch.rasc.dataformat.fb.Address=} obj
 * @returns {ch.rasc.dataformat.fb.Address}
 */
ch.rasc.dataformat.fb.Addresses.prototype.address = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new ch.rasc.dataformat.fb.Address).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
ch.rasc.dataformat.fb.Addresses.prototype.addressLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ch.rasc.dataformat.fb.Addresses.startAddresses = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} addressOffset
 */
ch.rasc.dataformat.fb.Addresses.addAddress = function(builder, addressOffset) {
  builder.addFieldOffset(0, addressOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
ch.rasc.dataformat.fb.Addresses.createAddressVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
ch.rasc.dataformat.fb.Addresses.startAddressVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ch.rasc.dataformat.fb.Addresses.endAddresses = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
ch.rasc.dataformat.fb.Addresses.finishAddressesBuffer = function(builder, offset) {
  builder.finish(offset);
};

// Exports for Node.js and RequireJS
this.ch = ch;
